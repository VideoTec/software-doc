git config --local (默认值)
git config --global
git config --system

https://git-scm.com/book/zh/v1/%E8%B5%B7%E6%AD%A5-%E5%88%9D%E6%AC%A1%E8%BF%90%E8%A1%8C-Git-%E5%89%8D%E7%9A%84%E9%85%8D%E7%BD%AE

一般在新的系统上，
我们都需要先配置下自己的 Git 工作环境。
配置工作只需一次，以后升级时还会沿用现在的配置。
当然，如果需要，你随时可以用相同的命令修改已有的配置。

Git 提供了一个叫做 git config 的工具（
译注：实际是 git-config 命令，只不过可以通过 git 加一个名字来呼叫此命令。），
专门用来配置或读取相应的工作环境变量。而正是由这些环境变量，
决定了 Git 在各个环节的具体工作方式和行为。
这些变量可以存放在以下三个不同的地方：

/etc/gitconfig 文件：系统中对所有用户都普遍适用的配置。
若使用 git config 时用 --system 选项，读写的就是这个文件。
（D:\PortableGit\mingw64\etc\gitconfig）

~/.gitconfig 文件：用户目录下的配置文件只适用于该用户。
若使用 git config 时用 --global 选项，读写的就是这个文件。

当前项目的 Git 目录中的配置文件（也就是工作目录中的 .git/config 文件）：
这里的配置仅仅针对当前项目有效。

每一个级别的配置都会覆盖上层的相同配置，
所以 .git/config 里的配置会覆盖 /etc/gitconfig 中的同名变量。

在 Windows 系统上，
Git 会找寻用户主目录下的 .gitconfig 文件。
主目录即 $HOME 变量指定的目录，
一般都是 C:\Documents and Settings\$USER。
此外，Git 还会尝试找寻 /etc/gitconfig 文件，
只不过看当初 Git 装在什么目录，就以此作为根目录来定位

http://stackoverflow.com/questions/17756753/where-do-the-settings-in-my-git-configuration-come-from
# System, applies to entire machine and all users
$ git config --system --list
$ git config --system --edit

# User defined
$ git config --global --list
$ git config --global --edit