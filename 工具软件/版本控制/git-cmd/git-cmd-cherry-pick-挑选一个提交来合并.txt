wangxiangfx@wangxiangfx MINGW64 /d/work/beside (br556)
$ git cherry-pick 5e3f02

cherry pick[英][ˈtʃeri: pik] [美][ˈtʃɛri pɪk]
<非正>选出最佳项目

-----------------------------------------
文档：
git cherry-pick --help
-----------------------------------------
git-cherry-pick - 
Apply the changes introduced by some existing commits

git cherry-pick [--edit] [-n] [-m parent-number] [-s] [-x] [--ff]
		  [-S[<keyid>]] <commit>…​
git cherry-pick --continue
git cherry-pick --quit
git cherry-pick --abort

-----------------------------------------
http://blog.csdn.net/wh_19910525/article/details/7554430
-----------------------------------------
git cherry-pick可以选择某一个分支中的一个或几个commit(s)来进行操作。
例如，假设我们有个稳定版本的分支，叫v2.0，
另外还有个开发版本的分支v3.0，我们不能直接把两个分支合并，
这样会导致稳定版本混乱，
但是又想增加一个v3.0中的功能到v2.0中，这里就可以使用cherry-pick了。

就是对已经存在的commit 进行 再次提交；

当执行完 cherry-pick 以后，将会 生成一个新的提交；
这个新的提交的哈希值和原来的不同